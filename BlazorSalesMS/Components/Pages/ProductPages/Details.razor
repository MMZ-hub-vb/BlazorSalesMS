@page "/products/details"
@using Microsoft.EntityFrameworkCore
@using BlazorSalesMS.Data
@inject IDbContextFactory<BlazorSalesMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Product</h2>
    <hr />
    @if (product is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@product.Status</dd>
            <dt class="col-sm-2">Sales System</dt>
            <dd class="col-sm-10">@product.SalesSystem</dd>
            <dt class="col-sm-2">ItemName</dt>
            <dd class="col-sm-10">@product.ItemName</dd>
            <dt class="col-sm-2">SKU</dt>
            <dd class="col-sm-10">@product.SKU</dd>
            <dt class="col-sm-2">Unit</dt>
            <dd class="col-sm-10">@product.Unit</dd>
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@product.Category</dd>
            <dt class="col-sm-2">Distributor Price</dt>
            <dd class="col-sm-10">@product.DistibutorPrice</dd>
            <dt class="col-sm-2">PdnPrice</dt>
            <dd class="col-sm-10">@product.PdnPrice</dd>
            <dt class="col-sm-2">SalesPrice</dt>
            <dd class="col-sm-10">@product.SalesPrice</dd>
            <dt class="col-sm-2">LastUpdateDate</dt>
            <dd class="col-sm-10">@product.LastUpdateDate</dd>
            <dt class="col-sm-2">ExpirationDate</dt>
            <dd class="col-sm-10">@product.ExpirationDate</dd>
        </dl>
        <div>
            <a class="btn btn-warning" href="@($"/products/edit?id={product.Id}")">Edit</a> |
            <a class="btn btn-info" href="@($"/products")">Back to List</a>
        </div>
    }
</div>

@code {
    private Product? product;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        product = await context.product.FirstOrDefaultAsync(m => m.Id == Id);

        if (product is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
