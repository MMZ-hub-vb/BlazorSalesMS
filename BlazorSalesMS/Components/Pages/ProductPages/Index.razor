@page "/products"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorSalesMS.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorSalesMS.Data.ApplicationDbContext> DbFactory

<PageTitle>Product</PageTitle>

<h1>Product List</h1>

<p>
    <a href="products/create">Create New</a>
</p>

<QuickGrid Class="table-striped" Items="context.product">
    <PropertyColumn Property="product => product.ItemName" />
    <PropertyColumn Property="product => product.SKU" />
    <PropertyColumn Property="product => product.Unit" />
    <PropertyColumn Property="product => product.Category" />
    <PropertyColumn Property="@(product => product.PdnPrice.ToString("N2"))" Title="Costing Price" />
    <PropertyColumn Property="@(product => product.SalesPrice.ToString("N2"))" Title="Sales Price" />
    <PropertyColumn Property="product => product.LastUpdateDate.ToShortDateString()" Title="Last Update"/>
    <PropertyColumn Property="product => product.ExpirationDate.ToShortDateString()" Title="Expair Date"/>

    <TemplateColumn Context="product">
        <a href="@($"products/edit?id={product.Id}")">Edit</a> |
        <a href="@($"products/details?id={product.Id}")">Details</a> |
        <a href="@($"products/delete?id={product.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
