@page "/units"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorSalesMS.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorSalesMS.Data.ApplicationDbContext> DbFactory
@attribute [Authorize(Roles = "Admin")]
<PageTitle>Unit List</PageTitle>

<h1>Unit List</h1>
<div class="row">
    <div class="col-2">
        <a class="btn btn-success" href="units/create">Create New</a>
    </div>
    <div class="col-2">
        <a class="btn btn-warning" href="/inventories/create">Back to Add Inventory</a>
    </div>

</div>

<QuickGrid Class="table-striped" Items="context.Unit">
    <PropertyColumn Property="unit => unit.UnitName" Title="Unit Name"/>
    <PropertyColumn Property="unit => unit.Description" />

    <TemplateColumn Context="unit">
        <a class="btn btn-success" href="@($"units/edit?id={unit.Id}")">Edit</a> |
        <a class="btn btn-info" href="@($"units/details?id={unit.Id}")">Details</a> |
        <a class="btn btn-danger" href="@($"units/delete?id={unit.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
