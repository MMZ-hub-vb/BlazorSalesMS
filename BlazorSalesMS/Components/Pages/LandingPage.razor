@page "/"
@using System.ComponentModel.DataAnnotations
@using BlazorSalesMS.Components.Account
@using BlazorSalesMS.Components.Account.Pages
@using BlazorSalesMS.Components.Account.Shared
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using BlazorSalesMS.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

@layout BlazorSalesMS.Components.Layout.MainLayout2
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Management System - Login</title>
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            height: 100vh;
            overflow: hidden;
        }

        .container {
            position: relative;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Background Image with Blur Effect */
        .background-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('./background-image.png');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            filter: blur(2.0px);
            z-index: 1;
        }

        /* Glass Effect Overlay */
        .glass-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(20, 20, 20, 0.3);
            z-index: 2;
        }

        /* Login Card Wrapper */
        .login-card-wrapper {
            position: relative;
            z-index: 3;
            width: 414.26px;
            padding: 2.13px;
            background: transparent;
            border-radius: 28.46px;
            box-shadow: 0px 4px 10.9px 0px rgba(0, 0, 0, 0.25), 22px 35px 91px 0px rgba(0, 0, 0, 0.1), 89px 139px 165px 0px rgba(0, 0, 0, 0.09), 200px 312px 223px 0px rgba(0, 0, 0, 0.05), 355px 556px 264px 0px rgba(0, 0, 0, 0.01), 555px 868px 288px 0px rgba(0, 0, 0, 0);
        }

        /* Main Login Card */
        .login-card {
            width: 410px;
            padding: 40px 80px;
            background: rgba(57, 101, 166, 0.1);
            border-radius: 26.33px;
            backdrop-filter: blur(17.79px);
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 40px;
            opacity: 1;
        }

        /* Title */
        .title {
            font-family: 'Inter', sans-serif;
            font-weight: 700;
            font-size: 24px;
            line-height: 1.238;
            color: #FFFFFF;
            text-align: center;
            margin: 0;
            white-space: nowrap;
            opacity: 1;
        }

        /* Login Section */
        .login-section {
            width: 250px;
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .login-title {
            font-family: 'Inter', sans-serif;
            font-weight: 700;
            font-size: 24px;
            line-height: 1.238;
            color: #FFFFFF;
            text-align: left;
            margin: 0;
            opacity: 1;
        }

        /* Form Styles */
        .login-form {
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        /* Input Groups */
        .input-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .input-label {
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            font-size: 13px;
            line-height: 1.213;
            color: #FFFFFF;
            opacity: 1;
        }

        .input-container {
            position: relative;
            width: 250px;
            height: 32px;
            background: #FFFFFF;
            border: 0.71px solid #BCBEC0;
            border-radius: 5px;
            display: flex;
            align-items: center;
            padding: 0 16px;
        }

        .input-field {
            width: 100%;
            height: 100%;
            border: none;
            outline: none;
            background: transparent;
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            font-size: 13px;
            line-height: 1.213;
            color: #B6B6B6;
        }

            .input-field::placeholder {
                color: #B6B6B6;
                opacity: 1;
            }

        /* Password Toggle Button */
        .password-toggle {
            position: absolute;
            right: 16px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            padding: 0;
            width: 11.38px;
            height: 11.38px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #B6B6B6;
        }

            .password-toggle svg {
                width: 16px;
                height: 16px;
                fill: currentColor;
                stroke: currentColor;
                stroke-width: 2;
                stroke-linecap: round;
                stroke-linejoin: round;
            }

        /* Forgot Password Link */
        .forgot-password {
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            font-size: 13px;
            line-height: 1.213;
            color: #FFFFFF;
            text-decoration: none;
            text-align: left;
            white-space: nowrap;
            margin-top: 8px;
            opacity: 1;
        }

            .forgot-password:hover {
                text-decoration: underline;
            }

        /* Login Button */
        .login-button {
            width: 250px;
            height: 40px;
            background: #005DB5;
            border: none;
            border-radius: 7.11px;
            font-family: 'Inter', sans-serif;
            font-weight: 700;
            font-size: 16px;
            line-height: 1.238;
            color: #FFFFFF;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.2s ease;
            opacity: 1;
        }

            .login-button:hover {
                background: #004A9B;
            }

            .login-button:active {
                background: #003D7F;
            }

        /* Remember Me Section */
        .remember-section {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 10px;
            width: 100%;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 7px;
            width: 108px;
            height: 16px;
        }

        .checkbox {
            width: 14px;
            height: 14px;
            border: 0.71px solid #BCBEC0;
            border-radius: 2px;
            background: #FFFFFF;
            cursor: pointer;
            appearance: none;
            position: relative;
        }

            .checkbox:checked {
                background: #005DB5;
                border-color: #005DB5;
            }

                .checkbox:checked::after {
                    content: '✓';
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    color: #FFFFFF;
                    font-size: 10px;
                    font-weight: bold;
                }

        .checkbox-label {
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            font-size: 13px;
            line-height: 1.213;
            color: #FFFFFF;
            cursor: pointer;
            white-space: nowrap;
            opacity: 1;
        }

        /* Register Text */
        .register-text {
            font-family: 'Inter', sans-serif;
            font-weight: 400;
            font-size: 9.96px;
            line-height: 1.2;
            color: #FFFFFF;
            text-align: center;
            margin: 0;
            opacity: 1;
        }

        .register-link {
            color: #FFFFFF;
            text-decoration: none;
            opacity: 1;
        }

            .register-link:hover {
                text-decoration: underline;
            }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .login-card-wrapper

        {
            width: 90vw;
            max-width: 404px;
            margin: 20px;
        }

        .login-card {
            width: calc(100% - 4.26px);
            max-width: 400px;
            padding: 30px 40px;
        }

        .login-section {
            width: 100%;
            max-width: 250px;
        }

        .input-container,
        .login-button {
            width: 100%;
        }

        .container {
            padding: 20px;
        }

        }

        @@media (max-width: 480px) {
            .login-card

        {
            padding: 20px 30px;
            gap: 30px;
        }

        .title {
            font-size: 20px;
        }

        .login-title {
            font-size: 20px;
        }

        }
    </style>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
   <div class="container">
        <!-- Background Image with Blur Effect -->
        <div class="background-image"></div>

        <!-- Glass Effect Overlay -->
        <div class="glass-overlay"></div>

        <!-- Main Login Card -->
        <div class="login-card-wrapper">
            <div class="login-card">
                <h2 class="title">Sales Management System</h2>

                <div class="login-section">
                    <h3 class="login-title" style="margin-left:70px">Login</h3>
                     <section>
            <StatusMessage Message="@errorMessage" />
            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator />
                <hr />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="Input.Email" class="form-label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="Input.Password" class="form-label">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>
                <div class="checkbox mb-3">
                    <label class="form-label">
                        <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>
                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p >
                        <a href="Account/ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Register as a new user</a>
                    </p>
                    <p>
                        <a href="Account/ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </EditForm>
        </section>
                    
                </div>
            </div>
        </div>
    </div>
</body>
</html>

@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        // This doesn't count login failures towards account lockout
        // To enable password failures to trigger account lockout, set lockoutOnFailure: true
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            //RedirectManager.RedirectTo(ReturnUrl);
            RedirectManager.RedirectTo("/home");
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
                "Account/LoginWith2fa",
                new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo("/");
        }
        else
        {
            errorMessage = "Error: Invalid login attempt.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
